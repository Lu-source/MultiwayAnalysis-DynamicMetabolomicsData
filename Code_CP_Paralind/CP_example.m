%% 
% This is an example script showing how to fit a CP model to 
% the data generated by dynamic metabolomics data sets. Here, as an example
% we use the glycolysis model with one source of induced variation.

%% load data 
load('Y.mat','Y')
X=tensor(Y.data);
labelss = Y.label{2};
s=size(X);
%% preprocess data

%% plot the preprocessed data
figure
for i=1:s(2)
    subplot(4,3,i)
    for j=1:s(1)
        if j<=10
            plot(1:1:20,squeeze(X.data(j,i,:)),'r')
            xlim([1 20]);
            hold on
        elseif j<=20
            plot(1:1:20,squeeze(X.data(j,i,:)),'b')
            xlim([1 20]);
            hold on
        end
    end
    title(labelss(i,:))
end


%% CP model 
nb_starts =60;
nm_comp=2;
optionsCP.factr=1e-10;
optionsCP.maxIts = 10000;
optionsCP.maxTotalITs=50000;
optionsCP.printEvery  = 1000;
Low{1}=-Inf*ones(size(X,1),nm_comp);
Low{2}=-Inf*ones(size(X,2),nm_comp);
Low{3}=zeros(size(X,3),nm_comp);
goodness_X1 = strings(nb_starts,1);
goodness_X = zeros(nb_starts,2); %Stores ExitMsg, Fit, F(error for lbfgsb)
Fac_X = cell(nb_starts,1);
out_X = cell(nb_starts,1);
for i=1:nb_starts
    if i==1
        
        [Fac_X{i}, ~, out_X{i}] =cp_opt(X,nm_comp,'init','nvecs','lower',Low,'opt_option',optionsCP);
    else
        
        [Fac_X{i}, ~, out_X{i}] =cp_opt(X,nm_comp,'init','randn','lower',Low,'opt_option',optionsCP);
        
    end
    
    goodness_X1(i) = out_X{i}.ExitMsg;
    goodness_X(i,1) = out_X{i}.Fit;
    goodness_X(i,2) = out_X{i}.OptOut.err(end,1);
end
%%
%uniqueness test
% 0 -> NOT unique
% 1 -> Unique
% 2 -> Inconclusive, need more random starts
good_flag = find(goodness_X1(:) == 'CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL.' | goodness_X1(:) == 'CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH.');
if length(good_flag)>=1
    F_round = round(goodness_X(good_flag,2),8);
    best_F_index = good_flag(F_round == min(F_round));
    if length(best_F_index) < 2 
        F_round = round(goodness_X(good_flag,2),5); 
        best_F_index = good_flag(F_round == min(F_round));
    end
else
    F_round = round(goodness_X(:,2),8);
    best_F_index = find(F_round == min(F_round));
   
end

eps = .05; %Arbtitraly picked, ideas for a values are appreciated
if length(best_F_index)==1
    unique_test = 2;
    disp('Need more random starts to determine uniqueness')
    worst_check = 0;
elseif length(best_F_index) > 1
    check_matrix = zeros(length(best_F_index));
    for i = 1:length(best_F_index)
        for j = 1:length(best_F_index)
            check_matrix(i,j) = score(Fac_X{best_F_index(j)},Fac_X{best_F_index(i)},'lambda_penalty',false);
        end
    end
    worst_check = min(min(check_matrix));
    if worst_check < (1-eps) 
        unique_test = 0;
    else
        unique_test = 1;
    end
end

%%
uniqueness=unique_test
[er,best_F_index]=sort(goodness_X(i,2),'ascend');
Fac_X_best = Fac_X{best_F_index(1)};
out_X_best = out_X{best_F_index(1)};
Fac = Fac_X_best;
fit=out_X_best.Fit
Consistency = corcond(X.data,normalize(Fac,1),[],0)
tc=TC(Fac.U)
C12=(Fac.U{1}(:,1)'*Fac.U{1}(:,2))/norm(Fac.U{1}(:,1))/norm(Fac.U{1}(:,2))
%%
%plot
Fac.U{1}(:,2)=-Fac.U{1}(:,2);
Fac.U{2}(:,2)=-Fac.U{2}(:,2);
Z1=labelss;
Z2={'conditions','metabolites','time'};
Z3{1}=1:20;Z3{2}=[1:11];Z3{3}=1:20;
labels{1} = {'C1','C2','C3','C4','C5','C6','C7','C8','C9','C10',...
    'C11','C12','C13','C14','C15','C16','C17','C18','C19','C20'};
% labels{2} = {'GLCi','G6P','F6P','F16P','BPG','P2G','P3G','PEP','PYR','ACE','TRIO'};
labels{2} = {'1','2','3','4','5','6','7','8','9','10','11'};
labels{3} = {'T1','T2','T3','T4','T5','T6','T7','T8','T9','T10',...
    'T11','T12','T13','T14','T15','T16','T17','T18','T19','T20'};
Leglab = {'Comp1', 'Comp2'};
Leglab3 = {'Comp1', 'Comp2','comp3'};


%% plot CP 2

figure
for i=1:3
    subplot(3,1,i)
    if i==1
        for j=1:nm_comp
            plot(Z3{i},Fac.U{i}(:,j),'-o','LineWidth',2.4)
            hold on
            legend(Leglab,'TextColor','blue')
        end
    elseif i==2
       for j=1:nm_comp
            plot(Z3{i},Fac.U{i}(:,j),'-o','LineWidth',2.4)
            set(gca,'xtick',Z3{i},'xticklabel',Z1)
            hold on
            legend(Leglab,'TextColor','blue')
            ax = gca;
            ax.YGrid = 'on';
            ax.GridAlpha = 1;
            title(Z2{i})
        end
    else
        for j=1:nm_comp
            plot(Z3{i},Fac.U{i}(:,j),'-o','LineWidth',2.4)
            hold on
            legend(Leglab,'TextColor','blue')
        end
    end
    set(gca,'FontSize', 18)
    title(Z2{i})
end



figure
for i=1:3
    if i<2
        subplot(1,3,i)
        plot(Fac.U{i}(1:10,1),Fac.U{i}(1:10,2),'ro','LineWidth',1.5)
        hold on
        plot(Fac.U{i}(11:20,1),Fac.U{i}(11:20,2),'bo','LineWidth',1.5)
        text(Fac.U{i}(:,1),Fac.U{i}(:,2),labels{i},'VerticalAlignment','bottom','HorizontalAlignment','right','fontsize',13)
        set(gca,'FontSize', 20)
        title(Z2{i})
        xlabel('first component')
        ylabel('second component')
    else
        subplot(1,3,i)
        plot(Fac.U{i}(:,1),Fac.U{i}(:,2),'o')
        text(Fac.U{i}(:,1),Fac.U{i}(:,2),labels{i},'VerticalAlignment','bottom','HorizontalAlignment','right','fontsize',18)
        set(gca,'FontSize', 20)
        title(Z2{i})
        xlabel('first component')
        ylabel('second component')
    end
end



